{"version":3,"sources":["api/chat/chat.events.js"],"names":["EventEmitter","require","ChatEvents","setMaxListeners","events","save","remove","registerEvents","Chat","e","event","post","emitEvent","console","log","doc","emit","_id"],"mappings":";;;;;AAAA;AACA;;;;AAKA,MAAMA,eAAeC,QAAQ,QAAR,CAArB;;AAEA;AACA,MAAMC,aAAa,IAAIF,YAAJ,EAAnB;;AAEA;AACAE,WAAWC,eAAX,CAA2B,CAA3B;;AAEA;AACA,MAAMC,SAAS;AACbC,QAAM,MADO;AAEbC,UAAQ;AAFK,CAAf;;AAKA;AACA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,OAAK,MAAMC,CAAX,IAAgBL,MAAhB,EAAwB;AACtB,UAAMM,QAAQN,OAAOK,CAAP,CAAd;AACAD,SAAKG,IAAL,CAAUF,CAAV,EAAaG,UAAUF,KAAV,CAAb;AACD;AACF;;AAED,SAASE,SAAT,CAAmBF,KAAnB,EAA0B;AACtBG,UAAQC,GAAR,CAAY,WAAZ,EAAyBJ,KAAzB;AACF,SAAO,UAAUK,GAAV,EAAe;AACpBb,eAAWc,IAAX,CAAiB,GAAEN,KAAM,IAAGK,IAAIE,GAAI,EAApC,EAAuCF,GAAvC;AACAb,eAAWc,IAAX,CAAgBN,KAAhB,EAAuBK,GAAvB;AACD,GAHD;AAID;;QAEQR,c,GAAAA,c;kBACML,U","file":"chat.events.js","sourcesContent":["/* eslint-disable guard-for-in,no-underscore-dangle,no-use-before-define,no-restricted-syntax */\n/**\n * Chat model events\n */\n\n\nconst EventEmitter = require('events');\n\n// import {} from '';\nconst ChatEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nChatEvents.setMaxListeners(0);\n\n// Model events\nconst events = {\n  save: 'save',\n  remove: 'remove',\n};\n\n// Register the event emitter to the model events\nfunction registerEvents(Chat) {\n  for (const e in events) {\n    const event = events[e];\n    Chat.post(e, emitEvent(event));\n  }\n}\n\nfunction emitEvent(event) {\n    console.log('emitEvent', event);\n  return function (doc) {\n    ChatEvents.emit(`${event}:${doc._id}`, doc);\n    ChatEvents.emit(event, doc);\n  };\n}\n\nexport { registerEvents };\nexport default ChatEvents;\n"]}