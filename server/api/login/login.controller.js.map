{"version":3,"sources":["api/login/login.controller.js"],"names":["index","get","Users","require","ref","DB","req","res","console","log","findOne","MobileNumber","body","mobile","then","result","user","JSON","parse","Password","password","IsActive","jwt","sign","process","env","JWT_SECKERT_KEY","err","token","send","status","msg","data","_id"],"mappings":";;;;;;;;;;QAUgBA,K,GAAAA,K;QAwBAC,G,GAAAA,G;;AAjChB;;;;AAEA;;;;AACA;;AACA;;;;AALA;AAOA,MAAMC,QAAQC,QAAQ,oBAAR,CAAd;;AAEA,MAAMC,MAAMC,mBAAGD,GAAH,CAAO,QAAP,CAAZ;AACO,SAASJ,KAAT,CAAeM,GAAf,EAAoBC,GAApB,EAAyB;AAC9BC,UAAQC,GAAR,CAAY,KAAZ;AACA;AACAP,QAAMQ,OAAN,CAAc,EAAEC,cAAcL,IAAIM,IAAJ,CAASC,MAAzB,EAAd,EAAiDC,IAAjD,CAAuDC,MAAD,IAAY;AAChE,UAAMC,OAAOC,KAAKC,KAAL,CAAW,yBAAeH,MAAf,CAAX,CAAb;AACA,QAAIC,IAAJ,EAAU;AACR,UAAIA,KAAKG,QAAL,KAAkB,0BAAeb,IAAIM,IAAJ,CAASQ,QAAxB,CAAtB,EAAyD;AACvD,eAAOJ,KAAKG,QAAZ;AACA,eAAOH,KAAKK,QAAZ;AACAC,+BAAIC,IAAJ,CAAS,EAAEP,IAAF,EAAT,EAAmBQ,QAAQC,GAAR,CAAYC,eAA/B,EAAgD,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9D,cAAID,GAAJ,EAAS;AACP,mBAAOpB,IAAIsB,IAAJ,CAAS,EAAEC,QAAQ,KAAV,EAAiBC,KAAK,sBAAtB,EAA8CC,MAAMhB,IAApD,EAAT,CAAP;AACD;AACD,mCAAK,GAAEA,KAAKL,YAAa,OAAzB,EAAiCiB,KAAjC;AACA,iBAAOZ,KAAKiB,GAAZ;AACA,iBAAO1B,IAAIsB,IAAJ,CAAS,EAAEC,QAAQ,IAAV,EAAgBC,KAAK,oBAArB,EAA2CC,MAAMhB,IAAjD,EAAuDY,KAAvD,EAAT,CAAP;AACD,SAPD;AAQD,OAXD,MAWO;AAAE,eAAOrB,IAAIsB,IAAJ,CAAS,EAAEC,QAAQ,KAAV,EAAiBC,KAAK,wBAAtB,EAAgDC,MAAM,IAAtD,EAAT,CAAP;AAAgF;AAC1F,KAbD,MAaO;AACL,aAAOzB,IAAIsB,IAAJ,CAAS,EAAEC,QAAQ,KAAV,EAAiBC,KAAK,mBAAtB,EAA2CC,MAAM,IAAjD,EAAT,CAAP;AACD;AACF,GAlBD;AAmBD;;AAEM,SAAS/B,GAAT,CAAaK,GAAb,EAAkBC,GAAlB,EAAuB;AAC5BA,MAAIsB,IAAJ,CAAS,EAAEG,MAAM,MAAR,EAAT;AACD","file":"login.controller.js","sourcesContent":["/* eslint-disable import/prefer-default-export,consistent-return,no-underscore-dangle */\nimport jwt from 'jsonwebtoken';\n\nimport DB from '../../config/firebase';\nimport { decodePassword } from '../user/user.controller';\nimport { set, add } from '../../config/redis/redisoperation';\n\nconst Users = require('../user/user.model');\n\nconst ref = DB.ref('server');\nexport function index(req, res) {\n  console.log('eee');\n  // const usersRef = ref.child(`users/${req.body.mobile}`);\n  Users.findOne({ MobileNumber: req.body.mobile }).then((result) => {\n    const user = JSON.parse(JSON.stringify(result));\n    if (user) {\n      if (user.Password === decodePassword(req.body.password)) {\n        delete user.Password;\n        delete user.IsActive;\n        jwt.sign({ user }, process.env.JWT_SECKERT_KEY, (err, token) => {\n          if (err) {\n            return res.send({ status: false, msg: 'Something went wrong', data: user });\n          }\n          add(`${user.MobileNumber}login`, token);\n          delete user._id;\n          return res.send({ status: true, msg: 'Login successfully', data: user, token });\n        });\n      } else { return res.send({ status: false, msg: 'Login Not successfully', data: null }); }\n    } else {\n      return res.send({ status: false, msg: 'Account not Found', data: null });\n    }\n  });\n}\n\nexport function get(req, res) {\n  res.send({ data: 'work' });\n}\n"]}