{"version":3,"sources":["api/minio/minio.controller.js"],"names":["setData","getUrl","Minio","require","Users","minioClient","Client","endPoint","useSSL","accessKey","process","env","MINIO_ACCESSKEY","secretKey","MINIO_SECRETKEY","getMinioClient","putObject","newPath","fileStream","res","data","req","console","log","bodyImage","MINIO_BUCKET_NAME","err3","etag","json","status","msg","fromWhere","Name","IsActive","URL","WhichImage","imageData","isActive","condition","_id","authData","findOneAndUpdate","$push","Images","new","then","result","userResult","Password","send","catch","err","body","matches","index","indexOf","s1","substring","i","type","base64Data","split","Date","now","Math","ceil","random","Buffer","from","bucketExists","err2","exists","makeBucket","err1","getUrlNew","fileName","resolve","reject","presignedUrl","url"],"mappings":"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","file":"minio.controller.js","sourcesContent":["/* eslint-disable import/prefer-default-export,\nno-unused-vars,no-useless-escape,no-underscore-dangle */\nconst Minio = require('minio');\nconst Users = require('../user/user.model');\n\nconst minioClient = new Minio.Client({\n  endPoint: '192.168.100.209',\n  useSSL: true,\n  accessKey: process.env.MINIO_ACCESSKEY,\n  secretKey: process.env.MINIO_SECRETKEY,\n});\n\nconst getMinioClient = new Minio.Client({\n  endPoint: 'env-8478623.mj.milesweb.cloud/minio',\n  useSSL: true,\n  accessKey: process.env.MINIO_ACCESSKEY,\n  secretKey: process.env.MINIO_SECRETKEY,\n});\nfunction putObject(newPath, fileStream, res, data, req) {\n  console.log('hehe');\n  const bodyImage = data;\n  return minioClient.putObject(process.env.MINIO_BUCKET_NAME,\n    newPath, fileStream, (err3, etag) => {\n      if (err3) {\n        return res.json({ status: 500, msg: 'Image failed to push in Minio' });\n      } else if (bodyImage.fromWhere === 'user') {\n        bodyImage.Name = newPath;\n        bodyImage.IsActive = true;\n        bodyImage.URL = null;\n        delete bodyImage.WhichImage;\n        delete bodyImage.imageData;\n        delete bodyImage.fromWhere;\n        delete bodyImage.isActive;\n        const condition = { _id: req.authData._id };\n        Users.findOneAndUpdate(condition, { $push: { Images: bodyImage } }, { new: true })\n          .then((result) => {\n            const userResult = result;\n            userResult.Password = null;\n            userResult._id = null;\n            userResult.IsActive = null;\n            return res.send({ status: true, msg: 'Image Updated Successfully', data: userResult });\n          }).catch((err) => {\n            console.log(err);\n            return res.send({ status: false, msg: 'Image not Updated Successfully' });\n          });\n      }\n      return true;\n    });\n}\n\nexport function setData(req, res) {\n  // res.status(200).json(req.body);\n  const bodyImage = req.body;\n  let newPath;\n\n  const matches = bodyImage.imageData;\n  const index = matches.indexOf('base64');\n  const s1 = matches.substring(0, index + 6);\n  const i = s1.indexOf(':');\n  let type = s1.substring(i + 1, index - 1);\n  const base64Data = matches.substring(index + 7);\n  type = type.split('/');\n  //  console.log('base64Data', base64Data);\n  console.log('type', type);\n  if (bodyImage.fromWhere === 'user') {\n    newPath = `chat${Date.now()}_${Math.ceil(Math.random(100000) * 1000000)}.${type[1]}`;\n  }\n  const fileStream = Buffer.from(base64Data, 'base64');\n\n  return minioClient.bucketExists(process.env.MINIO_BUCKET_NAME, (err2, exists) => {\n    if (err2) {\n      console.log({ status: 500, msg: 'Bucket is not exists', err2 });\n      // resolve(err2);\n      return res.json(err2);\n    }\n    console.log('exists --- ', exists);\n    if (exists) {\n      return putObject(newPath, fileStream, res, bodyImage, req);\n    }\n    return minioClient.makeBucket(process.env.MINIO_BUCKET_NAME, 'us-east-1', (err1) => {\n      if (err1) {\n        console.log(err1);\n        return res.json({ status: 500, msg: 'Image Bucket is not created' });\n      }\n      return putObject(newPath, fileStream, res, bodyImage, req);\n    });\n  });\n}\nfunction getUrlNew(fileName) {\n  return new Promise((resolve, reject) => {\n    getMinioClient.presignedUrl('GET', process.env.MINIO_BUCKET_NAME, fileName).then((url) => {\n      if (url) { resolve(url); }\n      return resolve(null);\n    }).catch((err) => {\n      console.log(err);\n      reject(null);\n    });\n  });\n}\nexport async function getUrl(fileName) {\n  const url = await getUrlNew(fileName);\n  return url;\n}\n\n"]}