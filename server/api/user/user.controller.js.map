{"version":3,"sources":["api/user/user.controller.js"],"names":["decodePassword","create","update","get","userOTP","updatePassword","updateImage","Users","require","ref","DB","getDateWithoutTime","date","currentDateTime","Date","toLocaleString","split","currentDate","console","log","day","parseInt","month","year","getLastUser","resolve","reject","usersRef","child","once","snapshot","exists","limitToLast","on","childSnapshot","err","snap","val","lastUser","UserId","checkUserExist","user","mobile","then","password","key","crypto","createCipher","process","env","CRYPTO_ALGO","newPassword","final","userOperation","userExist","exist","req","res","body","password1","user1","Name","MobileNumber","Email","email","Password","Gender","DOB","CountryCode","countryCode","InterestedIn","School","Company","Job","Lat","lat","Long","long","Image","IsActive","result","jwt","sign","JWT_SECKERT_KEY","token","send","status","msg","data","catch","errmsg","includes","authData","name","gender","interest","school","company","job","condition","_id","findOneAndUpdate","new","userResult","findById","Images","length","index","async","eachSeries","q","next","url","URL","isSendOTP","axios","post","via","country_code","code","phone_number","phone","code_length","headers","OTP_SECURITY_API_KEY","response","otp","fromWhere"],"mappings":"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","file":"user.controller.js","sourcesContent":["/* eslint-disable import/prefer-default-export,no-mixed-operators,no-unused-vars,max-len,no-underscore-dangle,no-param-reassign,consistent-return */\nimport crypto from 'crypto';\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport async from 'async';\n\nimport DB from '../../config/firebase';\n\nimport { set, add } from '../../config/redis/redisoperation';\n\nimport { getUrl, setData } from '../minio/minio.controller';\n\nconst Users = require('./user.model');\n\n// const RedisClient = require('../../config/redis').redisClient;\n\nconst ref = DB.ref('server');\n// getcurrentDate\nfunction getDateWithoutTime(date) {\n  const currentDateTime = new Date(date).toLocaleString().split(',');\n  let currentDate = currentDateTime[0];\n  currentDate = currentDate.split('/');\n  console.log(currentDate);\n  const day = parseInt(currentDate[0], 10) + 1;\n  const month = parseInt(currentDate[1], 10);\n  const year = parseInt(currentDate[2], 10);\n\n  // Putting it all together\n  return `${year}-${month}-${day}`;\n}\nfunction getLastUser() {\n  return new Promise((resolve, reject) => {\n    console.log('here');\n    const usersRef = ref.child('users');\n    usersRef.once('value', (snapshot) => {\n      if (snapshot.exists()) {\n        usersRef.limitToLast(1).on('child_added', (childSnapshot, err) => {\n          const snap = childSnapshot.val();\n          resolve(snap);\n        });\n      } else {\n        const lastUser = {};\n        lastUser.UserId = 0;\n        resolve(lastUser);\n      }\n    });\n  });\n}\nfunction checkUserExist(user) {\n  return new Promise((resolve, reject) => {\n    const usersRef = ref.child(`users/${user.mobile}`);\n    usersRef.once('value').then((snap) => {\n      resolve(snap.exists());\n    });\n  });\n}\nexport function decodePassword(password) {\n  const key = crypto.createCipher(process.env.CRYPTO_ALGO, 'abc');// abc replace by some data\n  let newPassword = key.update(password, 'utf8', 'hex');\n  newPassword += key.final('hex');\n  return newPassword;\n}\nasync function userOperation(user) {\n  const userExist = await checkUserExist(user);\n  if (!userExist) {\n    const lastUser = await getLastUser();\n    return { lastUser, exist: false };\n  }\n  return { lastUser: null, exist: true };\n}\nexport function create(req, res) {\n  console.log('add user', req.body);\n  const password1 = decodePassword(req.body.password);\n  const user1 = {\n    Name: null,\n    MobileNumber: req.body.mobile,\n    Email: req.body.email,\n    Password: password1,\n    Gender: null,\n    DOB: null,\n    CountryCode: req.body.countryCode,\n    InterestedIn: null,\n    School: null,\n    Company: null,\n    Job: null,\n    Lat: req.body.lat,\n    Long: req.body.long,\n    Image: [{\n      Name: null,\n      IsActive: false,\n    }],\n  };\n  Users.create(user1).then((result) => {\n    const user = result;\n    user.Password = null;\n    user.IsActive = null;\n    jwt.sign({ user }, process.env.JWT_SECKERT_KEY, (err, token) => {\n      if (err) {\n        return res.send({ status: false, msg: 'Something went wrong', data: user });\n      }\n      add(`${user.MobileNumber}login`, token);\n      return res.send({ status: true, msg: 'Profile is created successfully', data: user, token });\n    });\n  }).catch((err) => {\n    if (err.errmsg.includes('MobileNumber')) {\n      return res.send({ status: false, msg: 'Mobile Number Already Register' });\n    } else if (err.errmsg.includes('Email')) {\n      return res.send({ status: false, msg: 'Email Already Register' });\n    }\n    return res.send({ status: false, msg: 'Something Went Wrong' });\n  });\n\n  // userOperation(req.body).then((obj) => {\n  //   console.log('obj', obj);\n  //   if (!obj.exist) {\n  //     console.log('eeee');\n  //     const usersRef = ref.child('users');\n  //     const userID = obj.lastUser.UserId + 1;\n  //     const password = decodePassword(req.body.password);\n  //     const user = {\n  //       UserId: userID,\n  //       Name: null,\n  //       MobileNumber: req.body.mobile,\n  //       Email: req.body.email,\n  //       Password: password,\n  //       Gender: null,\n  //       DOB: null,\n  //       CountryCode: req.body.countryCode,\n  //       InterestedIn: null,\n  //       School: null,\n  //       Company: null,\n  //       Job: null,\n  //       Lat: req.body.lat,\n  //       Long: req.body.long,\n  //     };\n  //     usersRef.child(user.MobileNumber)\n  //       .set(user);\n  //     delete user.Password;\n  //     delete user.UserId;\n  //     jwt.sign({ user }, process.env.JWT_SECKERT_KEY, (err, token) => {\n  //       if (err) {\n  //         return res.send({ status: false, msg: 'Something went wrong', data: user });\n  //       }\n  //       add(`${user.MobileNumber}login`, token);\n  //       return res.send({ status: true, msg: 'Profile is created succesfully', data: user, token });\n  //     });\n  //     // have to delete password\n  //   } else {\n  //     return res.send({ status: false, msg: 'Mobile Already Register', data: null });\n  //   }\n  // }).catch((err) => {\n  //   console.log('ee', err);\n  //   return res.send({ status: false, msg: 'Profile is not created please try again', data: null });\n  // });\n}\nexport function update(req, res) {\n  console.log('update', req.body);\n  console.log('update', req.authData);\n  const user = {\n    Name: req.body.name,\n    Gender: req.body.gender,\n    DOB: req.body.DOB,\n    InterestedIn: req.body.interest,\n    School: req.body.school,\n    Company: req.body.company,\n    Job: req.body.job,\n  };\n  if (!user.InterestedIn) {\n    delete user.InterestedIn;\n  }\n  if (!user.Name) {\n    delete user.Name;\n  }\n  if (!user.Gender) {\n    delete user.Gender;\n  }\n  if (!user.DOB) {\n    delete user.DOB;\n  }\n  if (!user.School) {\n    delete user.School;\n  }\n  if (!user.Company) {\n    delete user.Company;\n  }\n  if (!user.Job) {\n    delete user.Job;\n  }\n  const condition = { _id: req.authData._id };\n  Users.findOneAndUpdate(condition, user, { new: true }).then((result) => {\n    const userResult = result;\n    userResult.Password = null;\n    userResult._id = null;\n    userResult.IsActive = null;\n    return res.send({ status: true, msg: 'Profile Updated Successfully', data: userResult });\n  }).catch((err) => {\n    console.log(err);\n  });\n  // DB.ref(`server/users/${req.body.phone}`).update(user);\n  // res.send({ status: true, msg: 'Profile Updated Suceesfully', data: null });\n}\nexport function get(req, res) {\n  Users.findById(req.authData._id, { _id: 0, Password: 0, IsActive: 0 }).then((user) => {\n    if (user.Images.length > 0) {\n      let index = 0;\n      console.log(user.Images.length);\n      async.eachSeries(\n        user.Images,\n        (q, next) => {\n          index += 1;\n          getUrl(q.Name).then((url) => {\n            q.URL = url;\n            if (user.Images.length === index) {\n              return res.send({ status: true, msg: 'User Information', data: user });\n            }\n            next();\n          }).catch((url) => {\n            q.URL = url;\n            if (user.Images.length === index) {\n              return res.send({ status: true, msg: 'User Information', data: user });\n            }\n            next();\n          });\n        });\n    } else return res.send({ status: true, msg: 'User Information1', data: user });\n  });\n  // const usersRef = ref.child(`users/${req.authData.MobileNumber}`);\n  // usersRef.once('value').then((snap) => {\n  //   if (snap.exists()) {\n  //     const user = snap.val();\n  //     console.log('user', user);\n  //     return res.send({ status: true, msg: 'User Information', data: user });\n  //   }\n  //   return res.send({ status: false, msg: 'Account not Found', data: null });\n  // });\n}\nexport function userOTP(req, res) {\n  console.log(req.body);\n  if (req.body.isSendOTP) {\n    // const OTP = Math.floor(1000 + Math.random() * 9000);\n    // RedisClient.set(`OTP${req.body.code}${req.body.phone}`, OTP, (err, reply) => {\n    //   if (err) {\n    //     return res.send({ status: false, msg: 'Something went wrong', data: null });\n    //   }\n    //   // send otp logic here\n    //   console.log(OTP);\n    axios.post('https://api.authy.com/protected/json/phones/verification/start', {\n      via: 'sms',\n      country_code: req.body.code,\n      phone_number: req.body.phone,\n      code_length: 4,\n    }, { headers: { 'X-Authy-API-Key': process.env.OTP_SECURITY_API_KEY } })\n      .then(response => res.send({ status: true, msg: 'OTP is send on Phone number', data: req.body }))\n      .catch((err) => {\n        console.log(err);\n        return res.send({ status: false, msg: 'Something went wrong', data: err });\n      });\n\n    // });\n  } else {\n    axios.get(`https://api.authy.com/protected/json/phones/verification/check?X-Authy-API-Key=\n  ${process.env.OTP_SECURITY_API_KEY}&phone_number=\n  ${req.body.phone}&country_code=${req.body.code}&verification_code=${req.body.otp}`,\n    { headers: { 'X-Authy-API-Key': process.env.OTP_SECURITY_API_KEY } })\n      .then(response => res.send({ status: true, msg: 'OTP is correct', data: req.body }))\n      .catch(err => res.send({ status: false, msg: 'OTP is wrong', data: null }));\n\n\n    // RedisClient.get(`OTP${req.body.code}${req.body.phone}`, (err, otp) => {\n    //   if (err) {\n    //     return res.send({ status: false, msg: 'Something went wrong', data: null });\n    //   } else if (otp === req.body.otp) {\n    //     RedisClient.del(`OTP${req.body.code}${req.body.phone}`);\n    //     return res.send({ status: true, msg: 'OTP is correct', data: req.body });\n    //   }\n    //   return res.send({ status: false, msg: 'OTP is wrong', data: null });\n    // });\n  }\n}\nexport function updatePassword(req, res) {\n  const user = {\n    Password: decodePassword(req.body.password),\n  };\n  // DB.ref(`server/users/${req.body.phone}`).update(user);\n  const condition = { MobileNumber: req.body.phone };\n  Users.findOneAndUpdate(condition, user).then((result) => {\n    console.log(result);\n    return res.send({ status: true, msg: 'Password Updated Successfully' });\n  }).catch((err) => {\n    console.log(err);\n  });\n}\nexport function updateImage(req, res) {\n  console.log('updateimage');\n  req.body.fromWhere = 'user';\n  setData(req, res);\n}\n"]}