{"version":3,"sources":["app.js"],"names":["log","console","app","server","http","createServer","socketio","require","serveClient","CONFIG","env","path","default","startServer","listen","PORT","IP","get","then","res","catch","err","error","module","exports"],"mappings":";;AAIA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAVA;;;;AAYA,MAAMA,MAAMC,OAAZ;AACA;AACA,MAAMC,MAAM,wBAAZ;AACA,MAAMC,SAASC,eAAKC,YAAL,CAAkBH,GAAlB,CAAf;;AAEA,uBAAcA,GAAd;AACA,sBAAeA,GAAf;AACA,MAAMI,WAAWC,QAAQ,WAAR,EAAqBJ,MAArB,EAA6B;AAC5CK,eAAaC,sBAAOC,GAAP,KAAe,YADgB;AAE5CC,QAAM;AAFsC,CAA7B,CAAjB;AAIAJ,QAAQ,mBAAR,EAA6BK,OAA7B,CAAqCN,QAArC;AACAC,QAAQ,kBAAR,EAA4BK,OAA5B,CAAoCV,GAApC;AACAK,QAAQ,UAAR,EAAoBK,OAApB,CAA4BV,GAA5B;AACA;AACA,SAASW,WAAT,GAAuB;AACrBV,SAAOW,MAAP,CAAcL,sBAAOM,IAArB,EAA2BN,sBAAOO,EAAlC,EAAsC,MAAM;AAC1ChB,QAAIA,GAAJ,CAAQ,4CAAR,EAAsDS,sBAAOM,IAA7D,EAAmEb,IAAIe,GAAJ,CAAQ,KAAR,CAAnE;AACD,GAFD;AAGD;AACD,uBAAeC,IAAf,CAAqBC,GAAD,IAAS;AAC3BlB,UAAQD,GAAR,CAAYmB,GAAZ;AACAN;AACD,CAHD,EAIGO,KAJH,CAIUC,GAAD,IAAS;AACdpB,UAAQD,GAAR,CAAYqB,GAAZ;AACArB,MAAIsB,KAAJ,CAAU,yCAAV,EAAqDD,GAArD;AACD,CAPH;;AASA;AACAE,OAAOC,OAAP,GAAiBtB,GAAjB;AACAsB,UAAUD,OAAOC,OAAjB","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\nimport express from 'express';\nimport http from 'http';\n\nimport connectMongo from './config/mongo';\nimport CONFIG from './config/environment';\nimport expressConfig from './config/express';\nimport registerRoutes from './routes';\n\nconst log = console;\n// Setup server\nconst app = express();\nconst server = http.createServer(app);\n\nexpressConfig(app);\nregisterRoutes(app);\nconst socketio = require('socket.io')(server, {\n  serveClient: CONFIG.env !== 'production',\n  path: '/socket.io-client',\n});\nrequire('./config/socketio').default(socketio);\nrequire('./config/express').default(app);\nrequire('./routes').default(app);\n// Start server\nfunction startServer() {\n  server.listen(CONFIG.PORT, CONFIG.IP, () => {\n    log.log('Express server listening on %d, in %s mode', CONFIG.PORT, app.get('env'));\n  });\n}\nconnectMongo().then((res) => {\n  console.log(res);\n  startServer();\n})\n  .catch((err) => {\n    console.log(err);\n    log.error('Server failed to start due to error: %s', err);\n  });\n\n// Expose app\nmodule.exports = app;\nexports = module.exports;\n"]}